version: 2.1

jobs:
    build_docs:
      docker:
        - image: circleci/python:3.8.5-buster
      steps:
        - restore_cache:
            keys:
              - source-cache-connectivity

        - checkout

        - run:
            name: Complete checkout
            command: |
              if ! git remote -v | grep upstream; then
                git remote add upstream https://github.com/adam2392/causal-networkx.git
              fi
              git remote set-url upstream https://github.com/adam2392/causal-networkx.git
              git fetch upstream

        - save_cache:
            key: source-cache-connectivity
            paths:
              - ".git"

        - add_ssh_keys:
            fingerprints:
              - "d6:88:6b:a0:80:bf:14:8e:80:2e:ed:11:52:26:37:68"

        - run:
            name: Set BASH_ENV
            command: |
              set -e
              echo "set -e" >> $BASH_ENV
              echo "export OPENBLAS_NUM_THREADS=4" >> $BASH_ENV
              echo "export PATH=~/.local/bin/:$PATH" >> $BASH_ENV
              echo "BASH_ENV:"
              cat $BASH_ENV
              mkdir -p ~/causal_networkx_data
              touch pattern.txt;

        - run:
            name: Merge with upstream
            command: |
              echo $(git log -1 --pretty=%B) | tee gitlog.txt
              echo ${CI_PULL_REQUEST//*pull\//} | tee merge.txt
              if [[ $(cat merge.txt) != "" ]]; then
                echo "Merging $(cat merge.txt)";
                git pull --ff-only upstream "refs/pull/$(cat merge.txt)/merge";
              fi

        # Load pip cache
        - restore_cache:
            keys:
              - pip-cache
        - restore_cache:
            keys:
              - user-install-bin-cachev1
              
        - run:
            name: Get Python running and install dependencies
            command: |
              pip install --upgrade --progress-bar off -r requirements.txt
              pip install --upgrade --progress-bar off -r dev-requirements.txt

        - save_cache:
            key: pip-cache
            paths:
              - ~/.cache/pip

        - save_cache:
            key: user-install-bin-cachev1
            paths:
              - ~/.local/lib/python3.8/site-packages
              - ~/.local/bin

        # Look at what we have and fail early if there is some library conflict
        - run:
            name: Check installation
            command: |
               which python
               python -c "import causal_networkx;"
               python -c "import networkx;"

        # Load our data
        # - restore_cache:
        #     keys:
        #       - data-cache-sample

        # Look at what we have and fail early if there is some library conflict
        - run:
            name: Check installation
            command: |
               which python
               python -c "import numpy; numpy.show_config()"

        - run:
            name: Get data
            command: |
              python setup.py develop --user

        # Build docs
        - run:
            name: make html
            command: |
              cd docs;
              make html;

        # Save the JUnit file
        - store_test_results:
            path: docs/_build/test-results
        - store_artifacts:
            path: docs/_build/test-results
            destination: test-results

        # Save the outputs
        - store_artifacts:
            path: docs/_build/html/
            destination: dev
        - persist_to_workspace:
            root: docs/_build
            paths:
              - html

        # Keep these separate, maybe better in terms of size limitations (?)
        # - save_cache:
        #     key: data-cache-sample
        #     paths:
        #       - ~/.mne
        #       - ~/mne_data/MNE-sample-data

    docs-deploy:
        docker:
          - image: node:8
        steps:
          - checkout

          - attach_workspace:
              at: docs/_build

          - restore_cache:
              keys:
                - website-cache

          - run:
              name: Install and configure dependencies
              command: |
                npm install --global gh-pages@3.0
                git config --global user.email "circle@mne.com"
                git config --global user.name "Circle Ci"

          - add_ssh_keys:
              fingerprints:
                - "d6:88:6b:a0:80:bf:14:8e:80:2e:ed:11:52:26:37:68"

          - run:
              # push built docs into the `dev` directory on the `gh-pages` branch
              name: Deploy docs to gh-pages branch
              command: |
                if [ "${CIRCLE_BRANCH}" == "main" ]; then
                  echo "Deploying dev docs for ${CIRCLE_BRANCH}.";
                  gh-pages --dotfiles --message "docs updates [skip ci] (${CIRCLE_BUILD_NUM})" --dist docs/_build/html --dest ./dev
                else
                  echo "Deploying stable docs for ${CIRCLE_BRANCH}.";
                  gh-pages --dotfiles --message "docs updates [skip ci] (${CIRCLE_BUILD_NUM})" --dist docs/_build/html --dest ./stable
                fi;

          - save_cache:
              key: website-cache
              paths:
                - ~/causal-networkx

workflows:
  version: 2

  default:
    jobs:
      - build_docs
      - docs-deploy:
          requires:
            - build_docs
          filters:
            branches:
              only:
                - main

